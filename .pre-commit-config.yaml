# Optimized pre-commit configuration
# Focus on fast, high-value checks for code quality and security

repos:
  # Pre-commit hooks - basic file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-merge-conflict
      - id: check-toml
      - id: debug-statements  # Check for leftover debug prints
      - id: check-json
      - id: detect-private-key
      - id: check-case-conflict      # Prevents case conflicts on case-insensitive filesystems
      - id: check-symlinks           # Ensures symlinks point to existing files
      - id: mixed-line-ending        # Prevents mixed line endings
      - id: check-docstring-first    # Ensures docstrings come first

  # Ruff - fast Python linter and formatter (updated to match project version)
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.12.9
    hooks:
      - id: ruff
        args: [--config, pyproject.toml, --fix, --exit-non-zero-on-fix]
      - id: ruff-format
        args: [--config, pyproject.toml]

  # MyPy - type checking (fast incremental mode, CLI-friendly)
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.17.1
    hooks:
      - id: mypy
        args: [
          --config-file, pyproject.toml,
          --ignore-missing-imports,
          --disable-error-code, misc  # Disable untyped decorator warnings for CLI
        ]
        additional_dependencies: [types-requests]
        files: ^src/
        exclude: ^(tests/|kb_data/|src/build_kb\.py)  # Exclude complex build_kb.py

  # Gitleaks - comprehensive secret detection
  - repo: https://github.com/gitleaks/gitleaks
    rev: v8.24.2
    hooks:
      - id: gitleaks

  # Safety - Python dependency vulnerability scanning
  - repo: https://github.com/Lucas-C/pre-commit-hooks-safety
    rev: v1.4.2
    hooks:
      - id: python-safety-dependencies-check
        files: requirements.*\.txt$

  # Pre-push hooks (more intensive checks)
  - repo: local
    hooks:
      # Critical E2E tests before push
      - id: critical-tests
        name: critical-tests
        entry: .venv/bin/pytest
        language: system
        stages: [pre-push]
        args: ['tests/e2e/test_e2e_cli_commands.py::TestCriticalE2EFunctionality', '-v', '--tb=short']
        pass_filenames: false
        always_run: true

      # Performance regression tests
      - id: performance-tests
        name: performance-tests
        entry: .venv/bin/pytest
        language: system
        stages: [pre-push]
        args: ['tests/performance/', '-v', '--tb=short']
        pass_filenames: false
        always_run: true

  # Enhanced security scanning for push (informational - rules not covered by Ruff S)
  - repo: https://github.com/PyCQA/bandit
    rev: '1.7.7'
    hooks:
      - id: bandit
        stages: [pre-push]
        args: ['-r', 'src/', '--tests', 'B110,B404', '--severity-level', 'medium']  # Only fail on medium+ severity
        pass_filenames: false
        always_run: true

# Configuration
default_language_version:
  python: python3.11

# Exclude directories and specific file patterns
exclude: '^(\.git/|\.venv/|__pycache__/|\.mypy_cache/|\.pytest_cache/|kb_data/|docs/.*\.html|.*\.pdf)$'

# Settings
fail_fast: false  # Run all hooks even if one fails
minimum_pre_commit_version: '3.0.0'
