[pytest]
# Pytest configuration for parallel testing

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Parallel execution settings
addopts =
    -v
    --tb=short
    --strict-markers
    --disable-warnings
    --no-cov

# Asyncio configuration
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function

# Markers for test organization
markers =
    # Test Type Markers
    unit: Unit tests with mocks - fast, isolated, no external dependencies
    integration: Integration tests - test component interactions, may use real services
    e2e: End-to-end tests - test complete user workflows through CLI
    performance: Performance and benchmark tests - measure speed and resource usage

    # Speed Markers
    slow: Tests that take > 5 seconds - can be skipped with '-m "not slow"'
    fast: Tests that complete in < 1 second - for quick feedback loops

    # Dependency Markers
    requires_kb: Tests that require a built knowledge base
    requires_api: Tests that need external API access (should be mocked in CI)
    requires_gpu: Tests that require GPU/CUDA support
    requires_zotero: Tests that need Zotero installation

    # Execution Markers
    serial: Tests that must run serially - not safe for parallel execution
    flaky: Tests that may fail intermittently - retry on failure
    critical: Critical path tests - must pass for release

    # Feature Markers
    cli: Tests for CLI command functionality
    search: Tests for search functionality
    quality: Tests for quality scoring system
    gap_analysis: Tests for gap analysis features
    discover: Tests for external paper discovery

# Coverage settings (when using pytest-cov)
[coverage:run]
source = src
omit =
    */tests/*
    */test_*

# Parallel execution notes:
# Run with parallel execution:
#   pytest -n 4              # Use 4 workers
#   pytest -n auto           # Auto-detect CPU count
#   pytest -n 4 -m "not slow"  # Fast tests in parallel
#
# Run specific test types:
#   pytest -m integration    # Only integration tests
#   pytest -m "not slow"     # Skip slow tests
#
# For serial execution (debugging):
#   pytest -n 0              # Disable parallel execution
#   pytest                   # Default (no parallel)
