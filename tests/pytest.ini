[pytest]
# Test discovery patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test directories
testpaths = tests

# Markers for test categories
markers =
    # Test Type Markers
    unit: Unit tests with mocks - fast, isolated, no external dependencies
    integration: Integration tests - test component interactions, may use real services
    e2e: End-to-end tests - test complete user workflows through CLI
    performance: Performance and benchmark tests - measure speed and resource usage

    # Speed Markers
    slow: Tests that take > 5 seconds - can be skipped with '-m "not slow"'
    fast: Tests that complete in < 1 second - for quick feedback loops

    # Dependency Markers
    requires_kb: Tests that require a built knowledge base
    requires_api: Tests that need external API access (should be mocked in CI)
    requires_gpu: Tests that require GPU/CUDA support
    requires_zotero: Tests that need Zotero installation

    # Execution Markers
    serial: Tests that must run serially - not safe for parallel execution
    flaky: Tests that may fail intermittently - retry on failure
    critical: Critical path tests - must pass for release

    # Feature Markers
    cli: Tests for CLI command functionality
    search: Tests for search functionality
    quality: Tests for quality scoring system
    gap_analysis: Tests for gap analysis features
    discover: Tests for external paper discovery
    asyncio: Tests that use asyncio functionality

# Coverage settings
addopts =
    --verbose
    --strict-markers
    --tb=short
    --cov=src
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml
    --cov-config=.coveragerc

# Timeout for tests (seconds) - requires pytest-timeout plugin
# timeout = 60

# Parallel execution (install pytest-xdist)
# Uncomment to enable parallel testing
# addopts = -n auto

# Minimum coverage percentage
# Uncomment to enforce minimum coverage
# --cov-fail-under=80

# Output settings
console_output_style = progress
log_cli = false
log_cli_level = INFO

# Ignore warnings from dependencies
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::FutureWarning:sentence_transformers
    ignore::FutureWarning:transformers

# Custom pytest plugins
# plugins =

# Test collection (using filterwarnings instead)
# collect_ignore = ["conftest_fast.py"]
